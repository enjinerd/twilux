// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	saved "twilux/business/saved"

	mock "github.com/stretchr/testify/mock"
)

// SavedRepoInterface is an autogenerated mock type for the SavedRepoInterface type
type SavedRepoInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: domain, ctx
func (_m *SavedRepoInterface) Create(domain saved.Domain, ctx context.Context) (saved.Domain, error) {
	ret := _m.Called(domain, ctx)

	var r0 saved.Domain
	if rf, ok := ret.Get(0).(func(saved.Domain, context.Context) saved.Domain); ok {
		r0 = rf(domain, ctx)
	} else {
		r0 = ret.Get(0).(saved.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(saved.Domain, context.Context) error); ok {
		r1 = rf(domain, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: domain, ctx
func (_m *SavedRepoInterface) Delete(domain saved.Domain, ctx context.Context) (saved.Domain, error) {
	ret := _m.Called(domain, ctx)

	var r0 saved.Domain
	if rf, ok := ret.Get(0).(func(saved.Domain, context.Context) saved.Domain); ok {
		r0 = rf(domain, ctx)
	} else {
		r0 = ret.Get(0).(saved.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(saved.Domain, context.Context) error); ok {
		r1 = rf(domain, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: username, ctx
func (_m *SavedRepoInterface) GetAll(username string, ctx context.Context) ([]saved.Domain, error) {
	ret := _m.Called(username, ctx)

	var r0 []saved.Domain
	if rf, ok := ret.Get(0).(func(string, context.Context) []saved.Domain); ok {
		r0 = rf(username, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]saved.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, context.Context) error); ok {
		r1 = rf(username, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
